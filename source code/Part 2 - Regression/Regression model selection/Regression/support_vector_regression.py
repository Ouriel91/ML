# -*- coding: utf-8 -*-
"""עותק של support_vector_regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1meAQ18N4nVeIPTHdP2twHBFUHi-GvXER

# Support Vector Regression (SVR)

## Importing the libraries
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

"""## Importing the dataset"""

dataset = pd.read_csv('Data.csv')
X = dataset.iloc[:, :-1].values
y = dataset.iloc[:, -1].values

#print('X:\n',X)
#print('y:\n',y)

y = y.reshape(len(y),1)
#print('y reshaped:\n',y)

"""## Splitting the dataset into the Training set and Test set"""

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)

"""## Feature Scaling"""

from sklearn.preprocessing import StandardScaler
sc_X = StandardScaler()
sc_y = StandardScaler()

X_train = sc_X.fit_transform(X_train)
y_train = sc_y.fit_transform(y_train)

#print("X_train: \n",X_train)
#print("y_train: \n",y_train)

"""## Training the SVR model on the Training set"""

from sklearn.svm import SVR
regressor = SVR(kernel = 'rbf')
regressor.fit(X_train, y_train)

"""## Predicting the Test set results"""

y_pred = sc_y.inverse_transform(regressor.predict(sc_X.transform(X_test)).reshape(-1,1))
np.set_printoptions(precision=2)
print('y_pred:\n',y_pred)
y_pred_reshape = y_pred.reshape(len(y_pred),1)
y_test_reshape = y_test.reshape(len(y_test),1)
print('concate:\n',np.concatenate((y_pred_reshape,y_test_reshape),1))

"""## Evaluating the Model Performance"""

from sklearn.metrics import r2_score

print("R2 score: " + "{:.2f}".format(r2_score(y_test, y_pred)*100) + "%")