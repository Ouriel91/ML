# -*- coding: utf-8 -*-
"""Copy of random_forest_classification.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1V_FimO6kTjm42s52I8N0foIWHWFc0LN9

# Random Forest Classification

## Importing the libraries
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

"""## Importing the dataset"""

dataset = pd.read_csv('Data.csv')
X = dataset.iloc[:, 1:-1].values
y = dataset.iloc[:, -1].values

#print('X:\n', X)
#print('y:\n', y)
#print('nulls num:\n', dataset.isnull().sum())

"""## Splitting the dataset into the Training set and Test set"""

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state = 0)

#print('X_train:\n', X_train)
#print('X_test:\n', X_test)
#print('y_train:\n', y_train)
#print('y_test:\n', y_test)

"""## Feature Scaling"""

from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
X_train = sc.fit_transform(X_train)
X_test = sc.transform(X_test)

#print('X_train:\n', X_train)
#print('X_test:\n', X_test)

"""## Training the Random Forest Classification model on the Training set"""

from sklearn.ensemble import RandomForestClassifier
classifier = RandomForestClassifier(n_estimators = 10, criterion = 'entropy', random_state = 0)
classifier.fit(X_train, y_train)

"""## Making the Confusion Matrix"""

from sklearn.metrics import confusion_matrix, accuracy_score
y_pred = classifier.predict(X_test)
print(y_pred)

y_pred_reshape = y_pred.reshape(len(y_pred),1)
y_test_reshape = y_test.reshape(len(y_test),1)
print(np.concatenate((y_pred_reshape,y_test_reshape),1))

print('confusion matrix:\n',confusion_matrix(y_test, y_pred))
print("accuracy_score: " + "{:.2f}".format(accuracy_score(y_test, y_pred)*100) + "%")