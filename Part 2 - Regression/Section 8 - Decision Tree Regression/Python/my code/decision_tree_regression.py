# -*- coding: utf-8 -*-
"""Copy of decision_tree_regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Bjk0yZdl6HxB5Lm2Tx2b2gvAGAJvOupL

# Decision Tree Regression

## Importing the libraries
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

"""## Importing the dataset"""

dataset = pd.read_csv('Position_Salaries.csv')
X = dataset.iloc[:, 1:-1].values
y = dataset.iloc[:, -1].values

print('X:\n', X)
print('y:\n', y)
print('nulls num:\n', dataset.isnull().sum())

"""## Training the Decision Tree Regression model on the whole dataset"""

# no feature scaling needed here because the goal of decision tree regressoion
# are resulting from successive splits of data from diffrent nodes of tree (diffrent categories)
# and there is no equations like previous models

from sklearn.tree import DecisionTreeRegressor
dtr = DecisionTreeRegressor(random_state=0) # get same split in each execution
dtr.fit(X,y)

"""## Predicting a new result"""

dtr.predict([[6.5]]) # single predict of 6.5 level as seen in last models

"""## Visualising the Decision Tree Regression results (higher resolution)"""

# DTR model is not best adapted as
# 2D data set (1 feature and 1 dependent variable)
# but this code is very easily adapted to other data sets
# here we got diffrent ranges of features where the prediction is
# the same (see in 6.5 level is the same as 6 level)
X_grid = np.arange(min(X), max(X), 0.01)
X_grid = X_grid.reshape((len(X_grid), 1))
plt.scatter(X, y, color = 'red')
plt.plot(X_grid, dtr.predict(X_grid), color = 'blue')
plt.title('Truth or Bluff (Decision Tree Regression)')
plt.xlabel('Position level')
plt.ylabel('Salary')
plt.show()